version: 1.0.1
component: test

failImmediatelyOnError: true

timeoutInSeconds: 36000

env:
  vaultVariables:
    FDK_CONFIG_PRIVATE_KEY: ocid1.vaultsecret.oc1.phx.amaaaaaaepf6idiavyptfi77vodnqoese5u5sa5jl52ksdraty7s4ch2vtnq

inputArtifacts:
  - name: downloadDockerCredentialHelper
    location: ${OCI_WORKSPACE_DIR}/input
    url: https://pipelines.artifactory.us-phoenix-1.oci.oracleiaas.com/ocir-overlay-global-yum-local/docker-credential-ocir-996.1f4a1425ed3-1.noarch.rpm
  - name: downloadRegctl
    location: ${OCI_WORKSPACE_DIR}/input
    url: https://pipelines.artifactory.us-phoenix-1.oci.oracleiaas.com/faas-release-generic-local/regctl/regctl-linux-arm64
  - name: downloadTestHarness
    location: ${OCI_WORKSPACE_DIR}/input
    url: https://pipelines.artifactory.us-phoenix-1.oci.oracleiaas.com/faas-release-generic-local/fdk-integration-test/fdk-integration-test-${FDK_INTEGRATION_TEST_VERSION}.tar.gz

steps:
  - type: shell
    name: Setup Environment
    command: |
      set -ex
      pushd ${OCI_WORKSPACE_DIR}/input
      sudo yum localinstall -y docker-credential-ocir-996.1f4a1425ed3-1.noarch.rpm
      sudo yum install -y jq jdk1.8
      popd

      sudo docker login -u BEARER_TOKEN -p $(echo "${FAAS_OCIR_REGION}" | docker-credential-ocir get | jq -r .Secret) "${FAAS_OCIR_REGION}"

      cp ${OCI_WORKSPACE_DIR}/input/regctl-linux-arm64 ${OCI_WORKSPACE_DIR}/regctl
      chmod 755 ${OCI_WORKSPACE_DIR}/regctl

      ${OCI_WORKSPACE_DIR}/regctl registry login -u BEARER_TOKEN -p $(echo "${FAAS_OCIR_REGION}" | docker-credential-ocir get | jq -r .Secret) "${FAAS_OCIR_REGION}"

  - type: shell
    name: Copy base images to OCIR
    command: |
      set -ex
      declare -a node_versions=('18' '20')
      declare -a suffixes=('' '-dev')
      for node in "${node_versions[@]}"; do
          for suffix in "${suffixes[@]}"; do
              src="odo-docker-signed-local.pipelines.artifactory.us-phoenix-1.oci.oracleiaas.com/fdk-node:${node}-${FDK_VERSION}${suffix}"
              dst="${FAAS_OCIR_REGION}/oraclefunctionsdevelopm/test-functions/nodefdk:${node}-${FDK_VERSION}${suffix}"
              ${OCI_WORKSPACE_DIR}/regctl image copy -v=DEBUG "$src" "$dst"
          done
      done

  - type: shell
    name: Copy test images to OCIR
    command: |
      set -ex
      function copy_image() {
          local image="$1"
          local node_version="$2"
          local src="odo-docker-signed-local.pipelines.artifactory.us-phoenix-1.oci.oracleiaas.com/faas-${image}:node-${node_version}-${FDK_VERSION}"
          local dst="${FAAS_OCIR_REGION}/oraclefunctionsdevelopm/test-functions/${image}:node${node_version}-${FDK_VERSION}"
          ${OCI_WORKSPACE_DIR}/regctl image copy -v=DEBUG "$src" "$dst"
      }
      
      copy_image runtime-version-fn 18
      copy_image hello-world-fn 20
      copy_image oci-sdk-fn 20
      copy_image runtime-version-fn 20
      copy_image timeout-fn 20

  - type: shell
    name: Setup User
    command: |
      if [[ "${RELEASE:-false}" == false ]]; then
        echo ${FDK_CONFIG_FILE_CONTENTS} | tr ' ' $'\n' | tee /tmp/config_fdk
        echo "${FDK_CONFIG_PRIVATE_KEY}" > /tmp/oci_api_key_fdk.pem
        ls -al /tmp/config_fdk /tmp/oci_api_key_fdk.pem
      fi

  - type: shell
    name: Run Integration Test Node 20
    command: |
      if [[ "${RELEASE:-false}" == false ]]; then
        mkdir -p integration_test_node20
        cd integration_test_node20
        tar zxvf ${OCI_WORKSPACE_DIR}/input/fdk-integration-test-${FDK_INTEGRATION_TEST_VERSION}.tar.gz .

        CLASSPATH=$(echo *.jar | tr ' ' ':')
        export AUTH_CONF_FILE_PATH=/tmp/config_fdk
        export REGION=us-ashburn-1
        export STAGE=teamcity
        export MULTI_ARCH_ENABLED=True
        export BUILD_VERSION=${FDK_VERSION}
        export OCIR_LOC="oraclefunctionsdevelopm/test-functions"
        export OCIR_REGION="iad.ocir.io"

        export FDK_RUNTIME=node20
        export test=FunctionsIntegrationTest,RuntimeVersionIntegrationTest,OciSdkUsageIntegrationTest
        java -jar junit-platform-console-standalone.jar -cp "$CLASSPATH" --scan-class-path
      fi

  - type: shell
    name: Run Integration Test Node 18
    command: |
      if [[ "${RELEASE:-false}" == false ]]; then
        mkdir -p integration_test_node18
        cd integration_test_node18
        tar zxvf ${OCI_WORKSPACE_DIR}/input/fdk-integration-test-${FDK_INTEGRATION_TEST_VERSION}.tar.gz .

        CLASSPATH=$(echo *.jar | tr ' ' ':')
        export AUTH_CONF_FILE_PATH=/tmp/config_fdk
        export REGION=us-ashburn-1
        export STAGE=teamcity
        export MULTI_ARCH_ENABLED=True
        export BUILD_VERSION=${FDK_VERSION}
        export OCIR_LOC="oraclefunctionsdevelopm/test-functions"
        export OCIR_REGION="iad.ocir.io"

        export FDK_RUNTIME=node18
        export test=RuntimeVersionIntegrationTest
        java -jar junit-platform-console-standalone.jar -cp "$CLASSPATH" --scan-class-path
      fi

  - type: shell
    name: Publish images to public OCIR (Release Only)
    command: |
      set -ex
      if [[ "${RELEASE:-false}" == true ]]; then
        declare -a node_versions=('18' '20')
        declare -a suffixes=('' '-dev')
        for node in "${node_versions[@]}"; do
            for suffix in "${suffixes[@]}"; do
                src="${FAAS_OCIR_REGION}/oraclefunctionsdevelopm/test-functions/nodefdk:${node}-${FDK_VERSION}${suffix}"
                dst="${FAAS_OCIR_REGION}/oraclefunctionsdevelopm/fnproject/node:${node}${suffix}"
                ${OCI_WORKSPACE_DIR}/regctl image copy -v=DEBUG "$src" "$dst"
            done
        done
      fi